<html>
<head>
<meta charset="UTF-8"/>
<meta http-equiv="MSThemeCompatible" content="yes">
<title>Auto Log Viewer</title>
<script type="text/javascript">
var fso = new ActiveXObject("Scripting.FileSystemObject");
var wsh = new ActiveXObject("WScript.Shell");
var files = [];
var prevFiles = { target: '', files: [] };

function init() {
    updateFileList();
    setInterval('updateFileList()', 60 * 1000);
}
function formatDate(d) {
    return (d.getFullYear() + '/' + (d.getMonth() + 1) + '/' + d.getDate() + ' ' + d.getHours() + ':'
    + d.getMinutes() + ':' + d.getSeconds()).replace(/(\D)(\d)(\b|(?=\D))/g, "$10$2");
}
function figureNumber(value) {
   var num = '' + value;
    while (num != (num = num.replace(/^(-?\d+)(\d{3})/, "$1,$2")));
    return num;
}
function updateFileList() {
    var targetDir = "TEMP";
    var TemporaryFolder = 2;
    var tfolder = fso.GetSpecialFolder(TemporaryFolder);
    if (document.getElementById('place_radio_desktop').checked) {
        var desktopPath = wsh.SpecialFolders('Desktop');
        tfolder = fso.GetFolder(desktopPath);
        targetDir = "Desktop"
    }
    files = [];
    for (var enumFiles = new Enumerator(tfolder.Files)
        ; ! enumFiles.atEnd(); enumFiles.moveNext()) {
        var f = enumFiles.item();
        var fd = {
            name: f.Name,
            path: f.Path,
            size: f.Size,
            dateLastModified: f.DateLastModified
        };
        files.push(fd);
    }
    files.sort(function (a, b) { return b.dateLastModified - a.dateLastModified; });

    var filelistDiv = document.getElementById('filelist');
    for (var i = filelistDiv.childNodes.length - 1; i >= 0; i--) {
        filelistDiv.removeChild(filelistDiv.childNodes.item(i));
    }
    var updateTimeLabelSpan = document.getElementById('update_time_label');
    updateTimeLabelSpan.innerHTML = new Date().toString();

    var filterRexexText = document.getElementById('filterText').value;
    filterRexexText = filterRexexText.replace(/^\s+|\s+$/g, "");
    var regexp;
    if (filterRexexText === "") {
        regexp = /.*/;
    } else {
        regexp = new RegExp(filterRexexText, "i");
    }

    for (var i in files) {
        var f = files[i];
        if (!f.name.match(regexp)) {
            continue;
        }
        filelistDiv.appendChild(document.createTextNode(formatDate(new Date(f.dateLastModified)) + " "));
        var a = document.createElement('a');
        a.setAttribute('href', '');
        a.attachEvent('onclick', new Function('showLogFile(' + i + '); return false;'));
        a.appendChild(document.createTextNode(f.name));
        filelistDiv.appendChild(a);
        filelistDiv.appendChild(document.createTextNode(' (' + figureNumber(f.size) + ')'));
        filelistDiv.appendChild(document.createElement('br'));
    }

    if (targetDir === prevFiles.target) {
        var newFileIndexList = [];
        for (var i in files) {
            var f1 = files[i];
            var found = false;
            for (var j in prevFiles.files) {
                var f2 = prevFiles.files[j];
                if (f1.name === f2.name) {
                    found = true;
                    break;
                }
            }
            if (!found) {
                if (f1.name.match(regexp)) {
                    newFileIndexList.push(i);
                }
            }
        }
        if (document.getElementById('auto_spawn_tailf_checkbox').checked) {
            for (var i in newFileIndexList) {
                showLogFile(newFileIndexList[i]);
            }
        }
    }
    prevFiles = {target: targetDir, files: files};
}
function showLogFile(index) {
    var f = files[index];
    var cmd = 'cmd /c title "' + f.name + '" & cscript //nologo tailf.js "' + f.path + '"';
    wsh.Run(cmd);
}
window.attachEvent('onload', init);
</script>
</head>
<body>
<form id="form1">
Filter: <input type="text" id="filterText" size="80" value="(\.log$)|(\.txt$)" /><br />
<input type="radio" name="place" id="place_radio_temp" value="temp" checked onclick="updateFileList()">TEMP<br>
<input type="radio" name="place" id="place_radio_desktop" value="desktop" onclick="updateFileList()">Desktop<br>
<!--
<input type="radio" name="place" value="other">: <input type="text" name="p"><br>
-->
<input type="checkbox" id="auto_spawn_tailf_checkbox" checked> Auto<br />
<hr>
<input type="button" id="updateButton" value="Update File List" onclick="updateFileList()">
<span id="update_time_label">Update Time Label</span>
</form>
<div id="filelist">
<a id="f1" href="#" onclick="showLogFile()">file 1</a><br>
<a id="f2" href="#" onclick="showLogFile()">file 2</a><br>
</div>
</body>
</html>
